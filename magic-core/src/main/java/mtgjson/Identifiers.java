package mtgjson;

import java.beans.ConstructorProperties;
import java.util.Optional;

/**
 * The Identifiers data model describes a list of identifiers associated to a card.
 *
 * <p>This class is immutable.</p>
 */
public final class Identifiers {

    private final String cardKingdomFoilId;

    private final String cardKingdomId;

    private final String mcmId;

    private final String mcmMetaId;

    private final String mtgArenaId;

    private final String mtgoFoilId;

    private final String mtgoId;

    private final String mtgjsonV4Id;

    private final String multiverseId;

    private final String scryfallId;

    private final String scryfallOracleId;

    private final String scryfallIllustrationId;

    private final String tcgplayerProductId;

    @ConstructorProperties(
            {"cardKingdomFoilId", "cardKingdomId", "mcmId", "mcmMetaId", "mtgArenaId", "mtgoFoilId", "mtgoId",
                    "mtgjsonV4Id", "multiverseId", "scryfallId", "scryfallOracleId", "scryfallIllustrationId",
                    "tcgplayerProductId"})
    public Identifiers(String cardKingdomFoilId, String cardKingdomId, String mcmId, String mcmMetaId,
                       String mtgArenaId, String mtgoFoilId, String mtgoId, String mtgjsonV4Id, String multiverseId,
                       String scryfallId, String scryfallOracleId, String scryfallIllustrationId,
                       String tcgplayerProductId) {
        this.cardKingdomFoilId = cardKingdomFoilId;
        this.cardKingdomId = cardKingdomId;
        this.mcmId = mcmId;
        this.mcmMetaId = mcmMetaId;
        this.mtgArenaId = mtgArenaId;
        this.mtgoFoilId = mtgoFoilId;
        this.mtgoId = mtgoId;
        this.mtgjsonV4Id = mtgjsonV4Id;
        this.multiverseId = multiverseId;
        this.scryfallId = scryfallId;
        this.scryfallOracleId = scryfallOracleId;
        this.scryfallIllustrationId = scryfallIllustrationId;
        this.tcgplayerProductId = tcgplayerProductId;
    }

    /**
     * Gets the <a href="https://www.cardkingdom.com">Card Kingdom</a> card foil identifier.
     *
     * @return The <a href="https://www.cardkingdom.com">Card Kingdom</a> card foil identifier.
     */
    public Optional<String> getCardKingdomFoilId() {
        return Optional.ofNullable(cardKingdomFoilId);
    }

    /**
     * Gets the <a href="https://www.cardkingdom.com">Card Kingdom</a> card identifier.
     *
     * @return The <a href="https://www.cardkingdom.com">Card Kingdom</a> card identifier.
     */
    public Optional<String> getCardKingdomId() {
        return Optional.ofNullable(cardKingdomId);
    }

    /**
     * Gets the <a href="https://www.cardmarket.com/en/Magic">Card Market</a> card identifier.
     *
     * @return The <a href="https://www.cardmarket.com/en/Magic">Card Market</a> card identifier.
     */
    public Optional<String> getMcmId() {
        return Optional.ofNullable(mcmId);
    }

    /**
     * Gets the <a href="https://www.cardmarket.com/en/Magic">Card Market</a> card meta identifier.
     *
     * @return The <a href="https://www.cardmarket.com/en/Magic">Card Market</a> card meta identifier.
     */
    public Optional<String> getMcmMetaId() {
        return Optional.ofNullable(mcmMetaId);
    }

    /**
     * The <a href="https://magic.wizards.com/en/mtgarena">Magic: The Gathering Arena</a> card identifier.
     *
     * @return The <a href="https://magic.wizards.com/en/mtgarena">Magic: The Gathering Arena</a> card identifier.
     */
    public Optional<String> getMtgArenaId() {
        return Optional.ofNullable(mtgArenaId);
    }

    /**
     * Gets the <a href="https://magic.wizards.com/en/mtgo">Magic: The Gathering Online</a> card foil identifier.
     *
     * @return The The <a href="https://magic.wizards.com/en/mtgo">Magic: The Gathering Online</a> card foil identifier.
     */
    public Optional<String> getMtgoFoilId() {
        return Optional.ofNullable(mtgoFoilId);
    }

    /**
     * Gets the <a href="https://magic.wizards.com/en/mtgo">Magic: The Gathering Online</a> card identifier.
     *
     * @return The <a href="https://magic.wizards.com/en/mtgo">Magic: The Gathering Online</a> card identifier.
     */
    public Optional<String> getMtgoId() {
        return Optional.ofNullable(mtgoId);
    }

    /**
     * Gets the universal unique identifier generated by MTGJSON. Each entry is unique. Entries are for MTGJSON v4 uuid
     * generation.
     *
     * @return The universal unique identifier generated by MTGJSON. Each entry is unique. Entries are for MTGJSON v4
     * uuid generation.
     */
    public Optional<String> getMtgjsonV4Id() {
        return Optional.ofNullable(mtgjsonV4Id);
    }

    /**
     * Gets the <a href="https://company.wizards.com/">Wizards of the Coast</a> card identifier used in conjunction
     * with
     * <a href="https://gatherer.wizards.com/">Gatherer</a>.
     *
     * @return The <a href="https://company.wizards.com/">Wizards of the Coast</a> card identifier used in conjunction
     * with <a href="https://gatherer.wizards.com/">Gatherer</a>.
     */
    public Optional<String> getMultiverseId() {
        return Optional.ofNullable(multiverseId);
    }

    /**
     * Gets the universal unique identifier generated by <a href="https://scryfall.com/">Scryfall</a>. Note that cards
     * with multiple faces are not unique.
     *
     * @return The universal unique identifier generated by <a href="https://scryfall.com/">Scryfall</a>. Note that
     * cards with multiple faces are not unique.
     */
    public Optional<String> getScryfallId() {
        return Optional.ofNullable(scryfallId);
    }

    /**
     * Gets the unique identifier generated by <a href="https://scryfall.com/">Scryfall</a> for this card's oracle
     * identity. This value is consistent across reprinted card editions, and unique among different cards with the same
     * name (tokens, Unstable variants, etc).
     *
     * @return The unique identifier generated by <a href="https://scryfall.com/">Scryfall</a> for this card's oracle
     * identity.
     */
    public Optional<String> getScryfallOracleId() {
        return Optional.ofNullable(scryfallOracleId);
    }

    /**
     * Gets the unique identifier generated by <a href="https://scryfall.com/">Scryfall</a> for the card artwork that
     * remains consistent across reprints. Newly spoiled cards may not have this field yet.
     *
     * @return The unique identifier generated by <a href="https://scryfall.com/">Scryfall</a> for the card artwork that
     * remains consistent across reprints.
     */
    public Optional<String> getScryfallIllustrationId() {
        return Optional.ofNullable(scryfallIllustrationId);
    }

    /**
     * Gets the <a href="https://www.tcgplayer.com">TCGplayer</a> card identifier.
     *
     * @return The <a href="https://www.tcgplayer.com">TCGplayer</a> card identifier.
     */
    public Optional<String> getTcgplayerProductId() {
        return Optional.ofNullable(tcgplayerProductId);
    }
}
